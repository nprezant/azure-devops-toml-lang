{
    "manifestVersion": 1,
    "id": "azure-devops-toml-lang",
    "publisher": "noah-prezant",
    "version": "0.0.2",
    "name": "TOML Language Support",
    "description": "Syntax highlighting for TOML files",
    "public": false,
    "categories": [
        "Azure Repos"
    ],
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ],
    "icons": {
        "default": "toml-logo.png"
    },
    "content": {
        "details": {
            "path": "overview.md"
        }
    },
    "repository": {
        "type": "git",
        "uri": "https://github.com/nprezant/azure-devops-toml-lang"
    },
    "links": {
        "support": {
            "uri": "https://github.com/nprezant/azure-devops-toml-lang/issues"
        },
        "license": {
            "uri": "https://github.com/nprezant/azure-devops-toml-lang/blob/main/LICENSE"
        }
    },
    "contributions": [
        {
            "id": "toml-language-contribution",
            "type": "ms.vss-features.code-editor-language",
            "targets": [
                "ms.vss-features.editor"
            ],
            "properties": {
                "extensions": [
                    ".toml"
                ],
                "language": {
                    "defaultToken": "",
                    "tokenPostfix": ".toml",
                    "displayName": "Toml",
                    "name": "toml",
                    "mimeTypes": [
                        "text/toml"
                    ],
                    "fileExtensions": [
                        "toml"
                    ],
                    "brackets": [
                        {
                            "token": "delimiter.bracket",
                            "open": "{",
                            "close": "}"
                        },
                        {
                            "token": "delimiter.square",
                            "open": "[",
                            "close": "]"
                        }
                    ],
                    "keywords": [
                        "true",
                        "false",
                        "nan",
                        "+nan",
                        "-nan",
                        "inf",
                        "+inf",
                        "-inf"
                    ],
                    "numberInteger": "0|[+-]?\\d[\\d_]*",
                    "numberFloat": "(?:0|[+-]?\\d[\\d_]*)(?:\\.\\d+)?(?:e[+-]?[1-9]\\d*)?",
                    "numberOctal": "0o[0-7][0-7_]*",
                    "numberHex": "0x[\\dA-Fa-f][\\dA-F_a-f]*",
                    "numberBinary": "0b[01][01_]*",
                    "numberDate": "\\d{4}-\\d{2}-\\d{2}([ Tt]\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(( ?[+-]\\d{1,2}(:\\d{2})?)|Z)?)?",
                    "escapes": "\\[\"\\bfnrt]",
                    "tokenizer": {
                        "root": [
                            {
                                "include": "@whitespace"
                            },
                            {
                                "include": "@comment"
                            },
                            {
                                "include": "@inlineCollections"
                            },
                            [
                                "(\".*?\"|'.*?'|.*?)([\t ]*)(=)(\\s+|$)",
                                [
                                    "type",
                                    "white",
                                    "operators",
                                    "white"
                                ]
                            ],
                            {
                                "include": "@numbers"
                            },
                            {
                                "include": "@scalars"
                            },
                            [
                                "\\S+$",
                                {
                                    "cases": {
                                        "@keywords": "keyword",
                                        "@default": "string"
                                    }
                                }
                            ]
                        ],
                        "object": [
                            {
                                "include": "@whitespace"
                            },
                            {
                                "include": "@comment"
                            },
                            [
                                "\\}",
                                "@brackets",
                                "@pop"
                            ],
                            [
                                ",",
                                "delimiter.comma"
                            ],
                            [
                                "[=]",
                                "operators"
                            ],
                            [
                                "(?:\".*?\"|'.*?'|[^,[{]+?)(?=[=])",
                                "type"
                            ],
                            {
                                "include": "@inlineCollections"
                            },
                            {
                                "include": "@scalars"
                            },
                            {
                                "include": "@numbers"
                            },
                            [
                                "[^\\s,}]+",
                                {
                                    "cases": {
                                        "@keywords": "keyword",
                                        "@default": "string"
                                    }
                                }
                            ]
                        ],
                        "array": [
                            {
                                "include": "@whitespace"
                            },
                            {
                                "include": "@comment"
                            },
                            [
                                "\\]",
                                "@brackets",
                                "@pop"
                            ],
                            [
                                ",",
                                "delimiter.comma"
                            ],
                            [
                                "\\.",
                                "delimiter.comma"
                            ],
                            {
                                "include": "@inlineCollections"
                            },
                            {
                                "include": "@scalars"
                            },
                            {
                                "include": "@numbers"
                            },
                            [
                                "[^\\s,.\\]]+",
                                {
                                    "cases": {
                                        "@keywords": "keyword",
                                        "@default": "string"
                                    }
                                }
                            ]
                        ],
                        "whitespace": [
                            [
                                "[\t\n\r ]+",
                                "white"
                            ]
                        ],
                        "comment": [
                            [
                                "#.*$",
                                "comment"
                            ]
                        ],
                        "inlineCollections": [
                            [
                                "\\[",
                                "@brackets",
                                "@array"
                            ],
                            [
                                "\\{",
                                "@brackets",
                                "@object"
                            ]
                        ],
                        "scalars": [
                            [
                                "\"([^\"\\]|\\.)*$",
                                "string.invalid"
                            ],
                            [
                                "'([^'\\]|\\.)*$",
                                "string.invalid"
                            ],
                            [
                                "'''[^']*'''",
                                "string"
                            ],
                            [
                                "'[^']*'",
                                "string"
                            ],
                            [
                                "\"\"\"",
                                "string",
                                "@mlDoubleQuotedString"
                            ],
                            [
                                "\"",
                                "string",
                                "@doubleQuotedString"
                            ]
                        ],
                        "mlDoubleQuotedString": [
                            [
                                "[^\"\\]+",
                                "string"
                            ],
                            [
                                "@escapes",
                                "string.escape"
                            ],
                            [
                                "\\.",
                                "string.escape.invalid"
                            ],
                            [
                                "\"\"\"",
                                "string",
                                "@pop"
                            ]
                        ],
                        "doubleQuotedString": [
                            [
                                "[^\"\\]+",
                                "string"
                            ],
                            [
                                "@escapes",
                                "string.escape"
                            ],
                            [
                                "\\.",
                                "string.escape.invalid"
                            ],
                            [
                                "\"",
                                "string",
                                "@pop"
                            ]
                        ],
                        "numbers": [
                            [
                                "@numberInteger(?=[\t]*[#,\\]}])",
                                "number"
                            ],
                            [
                                "@numberFloat(?=[\t]*[#,\\]}])",
                                "number.float"
                            ],
                            [
                                "@numberOctal(?=[\t]*[#,\\]}])",
                                "number.octal"
                            ],
                            [
                                "@numberBinary(?=[\t]*[#,\\]}])",
                                "number.binary"
                            ],
                            [
                                "@numberHex(?=[\t]*[#,\\]}])",
                                "number.hex"
                            ],
                            [
                                "@numberDate(?=[\t]*[#,\\]}])",
                                "number.date"
                            ],
                            [
                                "@numberInteger(?![\t]*\\S)",
                                "number"
                            ],
                            [
                                "@numberFloat(?![\t]*\\S)",
                                "number.float"
                            ],
                            [
                                "@numberBinary(?![\t]*\\S)",
                                "number.binary"
                            ],
                            [
                                "@numberOctal(?![\t]*\\S)",
                                "number.octal"
                            ],
                            [
                                "@numberHex(?![\t]*\\S)",
                                "number.hex"
                            ],
                            [
                                "@numberDate(?![\t]*\\S)",
                                "number.date"
                            ]
                        ]
                    }
                }
            }
        }
    ]
}